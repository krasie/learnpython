import requests
import time
import threading

data = {
    "appName": "虾米音乐",
    "imei": "861695030073543",
    "curDate": "2019-01-24  13:55:44",
    "requestHead": "474554202F67772F6D746F702E616C696D757369632E706C61796C6F672E6661636164652E706C61796C6F6773657276696"
                  "3652E616464706C61796C6F672F312E302F3F646174613D2537422532327265717565737453747225323225334125323225"
                  "3742253543253232686561646572253543253232253341253742253543253232616363657373546F6B656E25354325323225"
                  "334125354325323225354325323225324325354325323261707049642535432532322533413230302532432535432532326"
                  "1707056657273696F6E2535432532322533413730353036303025324325354325323263616C6C496425354325323225334"
                  "12535432532326D746F702E616C696D757369632E706C61796C6F672E6661636164652E706C61796C6F67736572766"
                  "963652E616464706C61796C6F675F636362353830363265653464346663613936653930663431626130373833613525"
                  "354325323225324325354325323263682535432532322533412535432532323232373230302535432532322532432535"
                  "432532326465766963654964253543253232253341253543253232383631363935303330303733353433253543253232"
                  "2532432535432532326C616E67756167652535432532322533412535432532327A685F434E5F25323348616E732535432"
                  "532322532432535432532326E6574776F726B253543253232253341312532432535432532326F70656E49642535432532"
                  "32253341302532432535432532326F7356657273696F6E253543253232253341253543253232323425354325323225324"
                  "3253543253232706C6174666F726D4964253543253232253341253543253232616E64726F69645F70686F6E65253543253"
                  "23225324325354325323270726F787925354325323225334125354325323266616C736525354325323225324325354325"
                  "32327265736F6C7574696F6E25354325323225334125354325323232353630783136303025354325323225324325354325"
                  "32327574646964253543253232253341253543253232573742636E792532424E4B506B44414A3148584579313671364F2"
                  "5354325323225324325354325323275786964253543253232253341253543253232253543253232253744253243253543"
                  "2532326D6F64656C253543253232253341253742253543253232636F6C6C6563744964253543253232253341302532432"
                  "535432532326C61746974756465253543253232253341302532432535432532326C6F6E67697475646525354325323225"
                  "334130253243253543253232736F6E6749642535432532322533413138303135313238373225324325354325323273746"
                  "17274506F696E742535432532322533413125324325354325323274696D65253543253232253341313534383330393333"
                  "3538373825324325354325323274797065253543253232253341382532432535432532327573657249642535432532322"
                  "5334130253744253744253232253744267775613D556464395F47574D6933326D787673774E686757736C553468496B504A"
                  "5756684530544A694742396437314A45326555784E323259426A674166666F676C6A4D4841485235585A474D7A476F524"
                  "8347835355333555A5163593177367963596B37556A4A7156344871393525324633483942376D4879682532464E376C4"
                  "45838383554665666384163757265416969626C63545A4C74766D6E6B684A5978777562354C752532464D71687378753"
                  "5586269453144714474564B6D75756B5A726B49396E742532427A55647334434B45615133786B5A3658696943546F757"
                  "36333716B31387661715576646E4D6A4762447632627A735A704C5A614A6A574B4E66696357575539317632546925324"
                  "24230726763703268514C5A7625324258326E6E584135775848394D7647534B304D51454E473851736471734D2532467"
                  "66F6E796263644E6F49513671344767584A4867746D4272464C50534A38534E65447061724F69324477466756534A616"
                  "3487A4236377261 48614352346D4575493641692532424C644F665A426C4A3972533467466F465231725353785878516E"
                  "436A3257566138655A543175253246326C48587846316345384C376A6556367951667A66514B3552697277426539766B546"
                  "5576A777A3566367A3461433073374B44725470667656614459253242467A4F476B41504A3134253246415A6B5778686B"
                  "585256615369415A704464444446747A446F4B424A3548356372332532364D4954315F6130303130616330336430656"
                  "4386331636234626434613136663633313930396330363330626636663739666626747970653D6F726967696E616C6"
                  "A736F6E20485454502F312E310D0A782D6170706B65793A2032313436353231340D0A782D6E713A20574946490D0A7"
                  "82D6D696E692D7775613A2048486E425F644E6750693077453955536655625A5038786C32454F463751323957655735"
                  "686A583472474B333779326A3873306A7272596A35764C48397A5347306F63573646356750614131527435517848573"
                  "033322532427A49434B566751253242764375253246546F69707847683233744B48342533440D0A782D632D747261636"
                  "569643A20573742636E792532424E4B506B44414A3148584579313671364F31353438333039333335353436303134343"
                  "131343931310D0A782D6170702D636F6E662D763A20300D0A636F6E74656E742D747970653A206170706C69636174696"
                  "F6E2F782D7777772D666F726D2D75726C656E636F6465643B636861727365743D5554462D380D0A782D66",
    "requestBody": "",
    "responseHead": "485454502F312E3120323030204F4B0D0A446174653A205468752C203234204A616E20323031392030353A35353A3337"
                   "20474D540D0A436F6E74656E742D547970653A206170706C69636174696F6E2F6A736F6E3B636861727365743D555446"
                   "2D380D0A436F6E74656E742D4C656E6774683A203230340D0A436F6E6E656374696F6E3A206B6565702D616C6976650D"
                   "0A782D726574636F64653A20535543434553530D0A782D6E6F64653A2035376466383237376630653865336238323339"
                   "613139636438366366353463300D0A43616368652D436F6E74726F6C3A206E6F2D63616368650D0A4D544F502D782D70"
                   "726F76696465723A20363137353537633037626634346163386531623361366432623935643933303730376433346465"
                   "31646636383136396138336130313065343837646334666538346239353461316631336230633236303665616436396"
                   "43739343566313061630D0A507261676D613A206E6F2D63616368650D0A782D62696E2D6C656E6774683A203139360D"
                   "0A582D506F77657265642D42793A206D2E74616F62616F2E636F6D0D0A5365727665723A2054656E67696E652F4173"
                   "65727665720D0A732D72743A2036320D0A782D617365727665722D737265743A20535543434553530D0A4561676C65"
                   "4579652D547261636549643A203062313532383634313534383330393333373030363536373565663362390D0A",
    "responseBody": "7b22617069223a226d746f702e616c696d757369632e706c61796c6f672e6661636164652e706c61796c6f67736572766"
                   "963652e616464706c61796c6f67222c2264617461223a7b2264617461223a7b22737461747573223a747275657d2c226"
                   "86561646572223a7b2274726163654964223a2230623135323836343135343833303933333730303635363735656633"
                   "6239222c2276657273696f6e223a317d7d2c22726574223a5b22535543434553533a3ae8b083e794a8e68890e58a9f2"
                   "25d2c2276223a22312e30227d"
}


def run(run_num):
    start_time = time.time()
    i = 0
    while i < run_num:
        requests.post("http://test.cmtracker.com:8082/quickapi/actionInfo/saveActionInfo.do", data=data)
        i += 1
    end_time = time.time()
    print("共请求%s次" % run_num)
    print("用时%0.2f秒" % (end_time - start_time))


def run_thread(num, tnum):
    """

    :param num: 每个函数请求几次
    :param tnum: 生成几个线程执行
    """
    threads = []
    start_time = time.time()
    for i in range(tnum):
        t = threading.Thread(target=run, args=(num,))
        threads.append(t)
    for i in range(tnum):
        threads[i].start()
    for i in range(tnum):
        threads[i].join()
    end_time = time.time()
    print("总用时%0.2f秒" % (end_time - start_time))


if __name__ == '__main__':
    run_thread(200, 20)

